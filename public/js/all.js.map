{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["window.Tether = {};\nrequire('./jquery.js');\nrequire('bootstrap');\n\nvar fs = require('fs');\nvar domify = require('domify');\nvar cfsign = require('aws-cloudfront-sign');\nvar AWS = require('aws-sdk');\n\n\n// Initialize the Amazon Cognito credentials provider\nAWS.config.region = 'us-east-1'; // Region\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: 'us-east-1:6d54f99d-7587-40d5-8a15-1fb02a6fafaa',\n});\n\n// Make the call to obtain credentials\nAWS.config.credentials.get(function(){\n\n    // Credentials will be available when this function is called.\n    var accessKeyId = AWS.config.credentials.accessKeyId;\n    var secretAccessKey = AWS.config.credentials.secretAccessKey;\n    var sessionToken = AWS.config.credentials.sessionToken;\n    AWS.config.apigateway = {\n        invokeUrl:'https://bq76iu94yb.execute-api.us-east-1.amazonaws.com/beta',\n        defaultContentType : 'application/json',\n        defaultAcceptType : 'application/json',\n        apiKey : 'BekLKPTbUC8elIoMZg5CZrqxrCxZJwf9J7kt4qA1',\n        accessKey: accessKeyId,\n        secretKey: secretAccessKey,\n        sessionToken: sessionToken\n    };\n    var apigClientFactory = require('aws-api-gateway-client');\n    var apigClient = apigClientFactory.newClient(AWS.config.apigateway);\n\n    var params = {};\n    var pathTemplate = '/tracks';\n    var method = 'GET';\n    var body = {};\n    var additionalParams = {headers:{},queryParams:{}};\n\n    apigClient.invokeApi(params, pathTemplate, method, additionalParams, body)\n        .then(function(result){\n\n            var html = fs.readFileSync(__dirname + '/artist.html', 'utf8');\n\n            var artists_ = new Set();\n\n            for(var i = 0; i <= result.data.tracks.length-1; i++) {\n                var mp3Item = result.data.tracks[i];\n                artists_.push(mp3Item.Artist);\n            }\n\n            for (var artist of artists_) {\n                var dom = domify(html);\n                // dom.querySelector(\".artist-name\").textContent = mp3Item.Artist;\n                dom.querySelector(\".artist-name\").textContent = artist;\n                // dom.querySelector(\".card-subtitle\").textContent = mp3Item.SongTitle;\n\n                // dom.querySelector(\".mp3-player\").id = \"mp3-player-\" + i;\n                // dom.querySelector(\".mp3-source\").id = \"mp3-source-\" + i;\n                // dom.querySelector(\".mp3-source\").src  = mp3Item.SongUrl;\n                //dom.querySelector(\".artist-description\").textContent = mp3Item.Description;\n\n\n                var signingParams = {\n                    keypairId: 'APKAJGMF5S4BA6LURESA',\n\n                    // Optional - this can be used as an alternative to privateKeyString\n                    privateKeyString: '-----BEGIN RSA PRIVATE KEY-----\\n' +\n                    'MIIJKQIBAAKCAgEA0iQGbRszWrJn2maFwztF3yt7y/dqqpXb30BTynntQ/9r2pWo\\n' +\n                    'IGcfLVsOgwY+MUE9oWhFPPhpKaEsIuu8TqalHpt7PO26Y1Xe+RSCOKHohGKZsBRr\\n' +\n                    'kQYFrSqIqmG3AyTeJ0ZDN58v8ur8LA9jrlpTGowGycwtlUDImy+IBu9dxzMWloIF\\n' +\n                    'p26mqvVKw5VEkWBeX36KuZj+UtoAbiAp9s6v0y/3mfwhKPYQXmgw06sc+TIiA4Jz\\n' +\n                    'rhC0n1bN+TbuCZVdgEJFo9Sl544uYS57NyUQnWVHWULAsAWTUGVB1VJ3gA9TFMRB\\n' +\n                    'UuOa8FW2snMAo+XLOqidI30hI6cveKVn1MsS8yL68dgVNnggFI0Fg9FoMiWD2Zzt\\n' +\n                    '+eQFbUwtW0foi5KysZx1BPSoX+ZzhtW8yVUvxS3MiWNxeEEyKcPD2rPiuVpQ2xVI\\n' +\n                    'Zx3OCNGRxQ/1sS4IKCfjOUglFbbBM28zScHrsSeVlkcFAtJUBQkYQnkL9ayKNUTk\\n' +\n                    'GDCh+KNSuaxIl87CPrfroasRE1dDzq4wKwGEqKelGcZerRh0UZYlKCW8iGT8IsAh\\n' +\n                    'yiGaZtrSxTXFldpS9QXLTiiu+mU1m+sZEmfwlRKQ0RDWfUxBtKrGm38WNvHBEf5d\\n' +\n                    'h5SscvfORsIAWa7zG/z1FphQW2IHkiOvKKiofUaPliTjpLJnqbQLEoQrLKsCAwEA\\n' +\n                    'AQKCAgBQeN1BIP58h/9/Qm2NAwDR4qwIwtnFM5g8mTy9OA3lUUXzMgZtSjBFRS58\\n' +\n                    'fIKKiCpayjxhidtzxrXJNa8qC2UGIJKEFaGf8r1tcy4fE9mgAMZMCLXclorL8pLd\\n' +\n                    'dIgKGy87qQuKnFpXUyd4k/gfR5W1f9QFqTv3gRSRYRVdWoL2Cplmz6nsoVIP+9lC\\n' +\n                    'psHYTig1t5bWVkFmZvdtNMH9Ms9gN2lBPa1RK1G/ZXT1SfzRbSJbZ7R2/wy8TBia\\n' +\n                    'jC+B2gIxYK+ceo2B7A/UxWEIEBiZvbQh+Y8imS/9xJj+YRNEJhoxxKojXOfzi09o\\n' +\n                    'bOPc394Au5tZgMyVA6wJLoZhldbONXFZUhochsAhL6dWwxAvLXuzTYbddWFRrA5h\\n' +\n                    '6//DR01NnHzb4Fh5yRuWBYtNjHvs1MQdoILt3PMrnpC8v+1QCu6r49FCeo0RVtVf\\n' +\n                    'kkEQrmUHXs0wtohzkZNMzFThtUPSyHnvMLaEInoi5t6+jwsQCWIT3avqgC9S49qZ\\n' +\n                    'y3BXYxfaZy5lo0LI2kwdkd9YjNZu+v3TzsqiGW1QgiYSahvzsxedvw/40D8FX+pV\\n' +\n                    'ai629ZlWcyDEn9X7uKzb+TOaGc2kuruBwSbDqYPsM4EXWCgVS/9aT6mYVkzmEJeL\\n' +\n                    'm7pqL9yW5ytkxx2/mzXhVLmsFkN3FXPBa98LK98baTw6spX/CQKCAQEA7WKpT9gO\\n' +\n                    'nLSSLtNl9Wzmp9REHn4rrGRFisDydJnSjmKj/RrpnvAtyK2dLK+s0Np4oEnpigch\\n' +\n                    '697EyXGu/ZrgmV7xueCDsGq6Ud3ZQNf3VYzdc2KJBW80mdg3ZYPR2WDe413ue7G3\\n' +\n                    'a5jBhlBSnQ4DDCiVxV5Jm3Pip6PPx+CHG3jouItn5FfIQ0/ITAScm6fkCKak04E3\\n' +\n                    '7pjEor9iUWnl+BvTai/hdzRP4AVMOEkRZDYWsWQ65jbZ5eDX7xh4D/ns7Pn0cu4m\\n' +\n                    'Ypx0mvwny8vwwwJrjTJYsjREDuBOi7d+yTB5UXBq9jOL2znvnpEigUTth3OJ+oJn\\n' +\n                    'tcPZEH8kEst39wKCAQEA4p5yYUI4CVCuywIuPLE/YFHyPnfak+UEpu6zHxRXxosQ\\n' +\n                    'RDoQQ+qLMM2ksag1Nt3JpMnEsm8TnRM/lfSUIx5Xa4eQUqHF092xQqVho08bW2L3\\n' +\n                    'WVX2wi73r6o3rvdUeHmaQL3v7M5f18+ElEx6E8WRt8pG3oV9Lq2CP6THK2kGni3p\\n' +\n                    'gWm0J3sPML/Uqq+Q2BjZs3U+J+m4PamhYKNeDGamT6tPZnO9uDjYNPqGRqxQrkst\\n' +\n                    'ipr/dvRU8PU4x1JOIdKAR52RlgRxjabyR3OYzpUEqhodPGxaiIep7AY2xLkZ9CUp\\n' +\n                    '6N7qA4qm0S4F98pXeOexuZe/1FMHUsT5Q34ukyaL7QKCAQEA6Uj9JNcqPPwDcPsV\\n' +\n                    'BuSXpDUpIGJT3x3Hbb2CR+5nCsCLchBBqI1WIRHlFWYrSjB5POSGGrw5rMgG0gTj\\n' +\n                    'uJy8vlyc51NpdzTbl9qSR3Q1v6AofN1H1MxdgBcJEb1CvALD5+OGm46ht56uCKXl\\n' +\n                    'Gi0L96Xm0ciAQ8HV63NDnaTcgbYH1lxBpBhUWToNmA8sLJgItCu4bZZedh8xltLH\\n' +\n                    '90Q/2NzXnlIhm/kPyhLKvcGo0reJA5mBfH5JEu0sp+5/BwxQtu5JOa0qkdw5h5no\\n' +\n                    'LhJkr/Av69mfarmMbKYo6otQkL0PbGYy53LurWm5PzZYF3u6hlOYNFR1QR6PsfOQ\\n' +\n                    'atwELwKCAQA5iDxFkMglJUSa6VzPr7gFPgif71Gghl3d+2+iDkoSb6+bgpoqg9r+\\n' +\n                    'ctbC+4829KuCmG7FVgnGsOJNsaACImvTMsFjGQreNMQRxWa6TRUG6GMfXQGeXsom\\n' +\n                    '4LHuS4A4bbbJhO7qUaJnaZmhBKFhb6EE5eeECqOzO/17JtwhmzJA6isD3dAMzeMX\\n' +\n                    'XzwgcR32nqh2NOeovl812GDN5eu0fkLuqvEnc27Q3C2XlZqNSqXY+eD/9UWx72m5\\n' +\n                    'GqhlgfGwCH7kr44MZehmK+IKXcCHgbGDdcnCU0fQrZBoCVPSMaPzJZQ0OJN0frjH\\n' +\n                    'FkYRmF8IpNmr4mijAMk1LCiUB+7PENQpAoIBAQC+OJoaPh8tgAj8z/Xlf3MFek6A\\n' +\n                    'YuYuc7szvU7c2crU/YFpVtpX9kjcvsPo4PL8PIkhhK46rkGY66GBg7tlSFHqomd+\\n' +\n                    'V31XG+nxZtwc0H4SeBjRvjfqBeSFA37/psLClaPX7B+Q937tl7xVrDpMfWf0JBGq\\n' +\n                    'PKlGQFLZu9TSD8R0Q5TDK4eP6zoumK1aQFYtsxkKcE3RucBVk/c16eO7RmbolHYS\\n' +\n                    'cy2AWHqdX+7+Ba7dVmC957ezBzBbRVyE1PDDfgakRhKLwFGCepzfhf1Q7+sAG0Zb\\n' +\n                    '38BHoTEsbVjo5mjba6bx0bnUCnJZxMRIPAayMhof6lWh7NUTPmlJW0iKt5sN\\n'     +\n                    '-----END RSA PRIVATE KEY-----',\n                    expireTime: Date.now() + 6000000\n                }\n                var lower = artist.toLowerCase();\n                    console.log(lower);\n                var origUrl = \"https://doyvfpldm7c3l.cloudfront.net/Thumbnails/\" + lower.replace(\" \", \"-\") + \".png\";\n\n                // Generating a signed URL\n                var signedUrl = cfsign.getSignedUrl( origUrl, signingParams);\n\n                dom.querySelector(\".artist-image\").src = signedUrl;\n\n                $(\".mp3africa-list-group\").append(dom);\n\n\n\n                // $(\"#play-button-\" + i).click(function() {\n                //     var source =  document.getElementById(\"mp3-source-\" + i);\n                //     source.load();\n                //\n                //     var player  =  document.getElementById(\"mp3-player-\" + i);\n                //     if (player.paused == false) {\n                //         player.pause();\n                //         alert('music paused');\n                //     } else {\n                //         player.play();\n                //         alert('music playing');\n                //     }\n                // });\n\n            }\n\n\n        }).catch( function(result){\n            //This is where you would put an error callback\n            console.log(result.stack);\n        });\n});\n\n // This is called with the results from from FB.getLoginStatus().\n  function statusChangeCallback(response) {\n    console.log('statusChangeCallback');\n    console.log(response);\n    // The response object is returned with a status field that lets the\n    // app know the current login status of the person.\n    // Full docs on the response object can be found in the documentation\n    // for FB.getLoginStatus().\n    if (response.status === 'connected') {\n      // Logged into your app and Facebook.\n      testAPI();\n    } else if (response.status === 'not_authorized') {\n      // The person is logged into Facebook, but not your app.\n      document.getElementById('status').innerHTML = 'Please log ' +\n        'into this app.';\n    } else {\n      // The person is not logged into Facebook, so we're not sure if\n      // they are logged into this app or not.\n      document.getElementById('status').innerHTML = 'Please log ' +\n        'into Facebook.';\n    }\n  }\n\n  // This function is called when someone finishes with the Login\n  // Button.  See the onlogin handler attached to it in the sample\n  // code below.\n  function checkLoginState() {\n    FB.getLoginStatus(function(response) {\n      statusChangeCallback(response);\n    });\n  }\n\n  window.fbAsyncInit = function() {\n  FB.init({\n    appId      : '348768225333299',\n    cookie     : true,  // enable cookies to allow the server to access \n                        // the session\n    xfbml      : true,  // parse social plugins on this page\n    version    : 'v2.5' // use graph api version 2.5\n  });\n\n  // Now that we've initialized the JavaScript SDK, we call \n  // FB.getLoginStatus().  This function gets the state of the\n  // person visiting this page and can return one of three states to\n  // the callback you provide.  They can be:\n  //\n  // 1. Logged into your app ('connected')\n  // 2. Logged into Facebook, but not your app ('not_authorized')\n  // 3. Not logged into Facebook and can't tell if they are logged into\n  //    your app or not.\n  //\n  // These three cases are handled in the callback function.\n\n  FB.getLoginStatus(function(response) {\n    statusChangeCallback(response);\n  });\n\n  };\n\n  // Load the SDK asynchronously\n  (function(d, s, id) {\n    var js, fjs = d.getElementsByTagName(s)[0];\n    if (d.getElementById(id)) return;\n    js = d.createElement(s); js.id = id;\n    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n    fjs.parentNode.insertBefore(js, fjs);\n  }(document, 'script', 'facebook-jssdk'));\n\n  // Here we run a very simple test of the Graph API after login is\n  // successful.  See statusChangeCallback() for when this call is made.\n  function testAPI() {\n    console.log('Welcome!  Fetching your information.... ');\n    FB.api('/me', function(response) {\n      console.log('Successful login for: ' + response.name);\n      document.getElementById('status').innerHTML =\n        'Thanks for logging in, ' + response.name + '!';\n    });\n  }\n\nfunction uniq(a) {\n    return Array.from(new Set(a));\n}\n\n\n\n\n\n\n"],"sourceRoot":"/source/"}